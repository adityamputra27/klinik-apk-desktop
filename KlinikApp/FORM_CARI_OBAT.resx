<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAA55JREFUeF7t
        mt9LFFEUx32JCPrxB0QvUT0VET5ZPYQ7q+zMtrHNXJR6KSh76y2KrMhAWH3JFx8i+h0kBUaFv5J6SAh/
        vpcoBf2AoDWsSHTR27nbGT16x9nFcZK5ez9wWJn7veN8zs7MfdhbptFoNBqNRqPRaEKnykrvNpJ2s2E5
        bwzLHoPPKayPUG+hMsZhdhDj6mCYbA/I9UHx4oq9rk6m9+L0aBO3nIsgNSNLFqzpuOmcwtNEE/gm65dI
        /TFM5x4ct6pTbEcFYxtEVR2p3RZP2iaM3YbMomaJBuLpogVcOKMiUH0guROHl0U0BuYOkHlzhmnbOBwd
        4PZtIhJdiURiPQ4VRNwVcDf0zM9POt8SieObcTgaVCbZ1pjltINAqxDCw0UjhGHuuNuEmGU34FDpAKvH
        MdKAD3i4dCgvr1sH8lm3Cf99aRQvLXhj18EzeBUuILMmZTrv4PPfu8Byns0fL1TimpP2afFSRZ3iiZk1
        u+AkXVDuP454sY6iG1FpOfth0qR8ksjXZCzJKlDTG8NgWyD41Z1Unarhl69l+N0HbbztydM1qUeP23lj
        03Xe2NyS/9sr41Ximi81ZPIOrg/U5wOp1CbUlYlb7IobPlp7ko+OjfOo8350jKdrT5AmsHrUlYHBETfY
        2fMKTxF9Orp7FxpgskHUlYHALzeYnfiB06NPNjux0ADL+Ym6MiSEU9WBuqGuDA2pBnVDXRkaUg3qhroy
        NKQa1A11ZWgoNGZneW6on08/b19UuaGB/FhYUDfUlaGhsMgN9vPfZ894Vr4JIUHdUFeGhsJiuvOFp7wo
        MRYW1A11ZWgoLHQDdAN0AzzlRanTgGWWOlFTLc2e8qLEmNec1VgiqRvqytBQEPyWupVW0CWSuqGuDA0F
        we82X2kFfTyoG+rK0FAQdAN0A0q8AWIF8JIIUrnhCL0E+dwcXPAgn+ntlmqqtcVTUJQY85qTGxnKnzMI
        1A11ZWgoLPwej6C3uR/UDXVlaCgsdAN0A3QDPOVFlUQD/JbIoEudH9QNdWVoKDSWWSJXY6nzg7qhrgwN
        qQZ1Q10ZGlIN6oa6MjSkGtQNdWVoSDWoG+rKwGDJ/zw+7Aa7Xqq5QUJsw0VdGcNkF9ygsltkTHYOdWXE
        BiIIfXHD7iapG7fu85t3HkaqxDUv3SQF3/6nQ4xtRF1vqixWDuH53ZkK1XcjYe9DTX/EpkKYoNRGScOy
        t6Ne8bhbZeHWOR/FKrxVtqzsL7dngK+OiQQjAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        nDn/A3lIYslpt3uhAAAAAElFTkSuQmCC
</value>
  </data>
</root>